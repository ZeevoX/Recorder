import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

ext {
    versionMajor = 1
    versionMinor = 0
    versionPatch = 0
}

/*def buildTime() {
    return java.time.Instant.now().getEpochSecond();
}

def buildTimeSimple() {
    long dateSimple = buildTime() / 1000
    return dateSimple
}*/

def buildNumber() {
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}

def buildDate() {
    def df = new SimpleDateFormat("yyyyMMdd")
    String formatted = df.format(new Date())
    return formatted
}

def genVersionName() {
    return buildNumber()
}

def genVersionCode() {
    return buildDate()
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}


def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'origin/master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim()) * 100
    }
    catch (ignored) {
        return -1
    }
}

android {

    signingConfigs {
        config {
            storeFile file("gitlab_keystore.jks")
            storePassword "recorder"
            keyAlias "Gitlab-PublicKey"
            keyPassword "recorder"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    //compileSdkVersion 'android-O'
    //buildToolsVersion '26.0.0-rc2'

    defaultConfig {

        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
        project.ext.set("archivesBaseName", "recorder")
        applicationId "com.zeevox.recorder"

        minSdkVersion 23
        targetSdkVersion 25
        //targetSdkVersion 'O'

        versionCode Integer.parseInt(genVersionCode())
        versionName genVersionName()

        /*applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.outputFile
                def fileName = file.name.replace("recorder", "recorder_" + buildNumber())
                output.outputFile = new File(file.parentFile, fileName)
            }
        }*/
    }

    buildTypes {

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false

            versionNameSuffix '.debug_' + buildDate()
        }

        weekly {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.config

            versionNameSuffix '.weekly_' + buildDate()
        }

        beta {

            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

            versionNameSuffix '.beta_' + rootProject.ext.betaVersion
        }

        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.3.1'
    //compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    compile 'com.android.support:design:25.3.1'
    //compile 'com.android.support:design:26.0.0-alpha1'

    /*               FABToolbar by fafaldo              */
    /*       https://github.com/fafaldo/FABToolbar      */
    //compile 'com.github.fafaldo:fab-toolbar:1.2.0'

    /*          Material Dialogs by afollestad          */
    /*  https://github.com/afollestad/material-dialogs  */
    //compile 'com.afollestad.material-dialogs:core:0.9.4.5'
    //compile 'com.afollestad.material-dialogs:commons:0.9.4.5'

    /*               LicensesDialog by PSDev            */
    /*     https://github.com/PSDev/LicensesDialog      */
    compile('de.psdev.licensesdialog:licensesdialog:1.8.2')
}

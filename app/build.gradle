import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

/*
You may need to refresh tags from remote.
"git fetch --tags" does not delete local
tags. To delete all local tags and sync
from remote, type these commands in Bash.
[Courtesy of Richard W on Stack Overflow]
[  https://stackoverflow.com/a/5373319  ]
Delete all local tags regardless of type.
"git tag -l | xargs git tag -d"
Fetch all tags from remote as usual.
"git fetch --tags"
 */

def buildDate() {
    def df = new SimpleDateFormat("yyyyMMdd")
    return df.format(new Date())
}

def gitVersionCode() {
    "git fetch".execute()
    def process = "git rev-list --all --count".execute()
    return process.text.toInteger()
}

def gitSHALong() {
    "git fetch".execute()
    return "git rev-list --tags --max-count=1".execute().text.trim().toString()
}

def gitTag() {
    "git fetch".execute()
    String gitTag = "git describe --tags " + gitSHALong()
    return gitTag.execute().text.trim().toString()
}

def gitCommitsSinceTag() {
    "git fetch".execute()
    String command = "git rev-list " + gitSHALong() + "..HEAD --count"
    return command.execute().text.trim().toString()
}

def gitVersionName() {
    "git fetch".execute()
    return gitTag().toString() + "." + gitCommitsSinceTag().toString()
}

android {

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileSdkVersion 27
    buildToolsVersion "27.0.2"

    defaultConfig {

        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"

        applicationId "com.zeevox.recorder"

        minSdkVersion 23
        targetSdkVersion 27

        versionCode gitVersionCode()
        versionName gitVersionName()

        /** Gradle 4.0 and above **/
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Recorder-${versionCode}-${versionName}.apk"
            }
        }
        /** Gradle 3.3 and below **/
        /*applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.packageApplication.outputFile
                output.packageApplication.outputFile = new File(file.parent, "Recorder-${versionCode}-${versionName}.apk")
            }
        }*/
    }

    buildTypes {

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            versionNameSuffix '.debug_' + buildDate()
        }

        weekly {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix '.weekly_' + buildDate()
        }

        beta {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix '.beta'
        }

        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix '.release'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    /*          Material Dialogs by afollestad          */
    /*  https://github.com/afollestad/material-dialogs  */
    compile 'com.afollestad.material-dialogs:core:0.9.5.0'
    //compile 'com.afollestad.material-dialogs:commons:0.9.4.5'

    /*               LicensesDialog by PSDev            */
    /*     https://github.com/PSDev/LicensesDialog      */
    compile 'de.psdev.licensesdialog:licensesdialog:1.8.2'

    /*          Android Audio Library by axet           */
    /*   https://gitlab.com/axet/android-audio-library  */
    //compile 'com.github.axet:android-audio-library:1.0.28'

    /*            Dogscreen Library by ZeevoX           */
    /*         https://github.com/ZeevoX/Dogscreen      */
    compile 'com.zeevox:dogscreen:2.1.2'
}
